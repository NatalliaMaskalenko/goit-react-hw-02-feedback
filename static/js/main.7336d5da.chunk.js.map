{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Section","title","children","className","s","section","Notification","text","defaultProps","randomIntegerFromInterval","min","max","Math","floor","random","randomColor","Statistics","good","neutral","bad","total","positivePercentage","style","color","FeedbackOptions","options","onLeaveFeedback","container","map","option","onClick","type","button","shortid","generate","App","state","handleIncrement","setState","prevState","countTotalFeedbacks","countPositiveFeedbackPercentage","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4SAgBeA,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,0BAASC,UAAaC,IAAEC,QAAxB,UACIJ,GAAS,6BAAKA,IACdC,MCNFI,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAErB,6BAAKA,KAILD,EAAaE,aAAe,CACxBD,KAAM,qBAGKD,QCwBTG,G,MAA4B,SAACC,EAAKC,GACpC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,KAGxD,SAASK,IACL,MAAM,OAAN,OAAcN,EAA0B,EAAG,KAA3C,6BACYA,EAA0B,EAAG,KADzC,4BAEYA,EAA0B,EAAG,KAFzC,KAIWO,MAtCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,mCACKD,IAAU,EACP,qCACI,oBAAGE,MAAO,CAAEC,MAAOR,KAAnB,mBAA2CE,KAC3C,oBAAGK,MAAO,CAAEC,MAAOR,KAAnB,sBAA8CG,KAC9C,oBAAGI,MAAO,CAAEC,MAAOR,KAAnB,kBAA0CI,KAC1C,oBAAGG,MAAO,CAAEC,MAAOR,KAAnB,oBAA4CK,OAC5C,oBAAGE,MAAO,CAAEC,MAAOR,KAAnB,iCACyBM,EAAmBD,KAD5C,WAKJ,cAAC,EAAD,O,iCCQDI,EAvBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAExB,qBAAKvB,UAAaC,IAAEuB,UAApB,SAEYF,EAAQG,KAAI,SAAAC,GAAM,OACd,wBACIC,QAAS,kBAAMJ,EAAgBG,IAC/BE,KAAK,SACL5B,UAAaC,IAAE4B,OAHnB,SAMSH,GAFAI,IAAQC,kBCP3BC,E,4MACFC,MAAQ,CACJnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,gBAAkB,SAAAR,GACpB,EAAKS,UAAS,SAAAC,GAAS,sBACpBV,EAASU,EAAUV,GAAU,O,EAIhCW,oBAAsB,kBAClB,EAAKJ,MAAMnB,KAAO,EAAKmB,MAAMlB,QAAU,EAAKkB,MAAMjB,K,EAGtDsB,gCAAkC,SAACD,GAAD,OAC9B5B,KAAK8B,MAAO,EAAKN,MAAMnB,KAAOuB,EAAuB,M,4CAGzD,WACK,MAA+BG,KAAKP,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfkB,EAA0EM,KAA1EN,gBAAiBG,EAAyDG,KAAzDH,oBAAqBC,EAAoCE,KAApCF,gCAC/C,OACI,qCACI,cAAC,EAAD,CAASxC,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBwB,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiBW,MAE3E,cAAC,EAAD,CAASpC,MAAM,aAAf,SACI,cAAC,EAAD,CACIgB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,EACPnB,mBAAoBoB,a,GAnC1BG,aA0CHT,ICxCfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCX1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,kBCA1ED,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.7336d5da.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className = {s.section}>                      \r\n       {title && <h2>{title}</h2>}\r\n       {children}\r\n    </section>  \r\n)\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.any,\r\n};\r\n\r\n\r\nexport default Section;\r\n","const Notification = ({text}) => (\r\n                               \r\n<h3>{text}</h3>\r\n\r\n    )\r\n\r\nNotification.defaultProps = {\r\n    text: 'No feedback given',\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/';\r\nimport s from './Statistics.module.css'\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            {total() > 0 ? (\r\n                <>\r\n                    <p style={{ color: randomColor() }}>Good: {good}</p>\r\n                    <p style={{ color: randomColor() }}>Neutral: {neutral}</p>\r\n                    <p style={{ color: randomColor() }}>Bad: {bad}</p>\r\n                    <p style={{ color: randomColor() }}>Total: {total()}</p>\r\n                    <p style={{ color: randomColor() }}>\r\n                        Positive feedbacks: {positivePercentage(total())} %\r\n                    </p>\r\n                </>\r\n            ) : (\r\n                <Notification />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    countTotalFeedbacks: PropTypes.func,\r\n    countPositiveFeedbackPercentage: PropTypes.func,\r\n};\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nfunction randomColor() {\r\n    return `rgb(${randomIntegerFromInterval(0, 255)}, \r\n              ${randomIntegerFromInterval(0, 255)},\r\n              ${randomIntegerFromInterval(0, 255)})`;\r\n}\r\nexport default Statistics;","import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n                               \r\n<div className = {s.container}>\r\n         {\r\n            options.map(option => (\r\n                <button\r\n                    onClick={() => onLeaveFeedback(option)}\r\n                    type=\"button\"\r\n                    className = {s.button}\r\n                    key={shortid.generate()}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                ))\r\n            }\r\n</div>\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;","import { Component } from 'react';\r\nimport Section from './components/Section';\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\n\r\n\r\nclass App extends Component{\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n      handleIncrement = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n    countTotalFeedbacks = () =>\r\n        this.state.good + this.state.neutral + this.state.bad;\r\n    \r\n\r\n    countPositiveFeedbackPercentage = (countTotalFeedbacks) =>\r\n        Math.round((this.state.good / countTotalFeedbacks) * 100);\r\n    \r\n\r\n    render() {\r\n         const { good, neutral, bad } = this.state;\r\n         const { handleIncrement, countTotalFeedbacks, countPositiveFeedbackPercentage } = this;\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={handleIncrement}/>\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    <Statistics\r\n                        good={good}\r\n                        neutral={neutral}\r\n                        bad={bad}\r\n                        total={countTotalFeedbacks}\r\n                        positivePercentage={countPositiveFeedbackPercentage} />\r\n                </Section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2ICUK\",\"button\":\"FeedbackOptions_button__3e2p5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1QFE_\"};"],"sourceRoot":""}